package ch08.ex03;

/**
 * ユークリッドのアルゴリズム（200 年以上前のものです）は、2 つの数値の最大公約数 （greatest common divisor）を計算します。b
 * が0 であれば、gcd(a, b) = a であり、そうでな ければ、gcd(b, rem(a, b)) です。rem は、余りを意味しています。a かb
 * が負であったと しても、明らかにgcd は、負になるべきではありません（なぜなら、その値の符号を正にし たものの方がより大きな約数となるからです）。gcd
 * のアルゴリズムを%、floorMode、 数学的な（負ではない）余りを生成するrem 関数で実装しなさい。これらの3 つの方法
 * のどれが負の値に対して最も簡単ですか。
 */

public class GCD {

}
